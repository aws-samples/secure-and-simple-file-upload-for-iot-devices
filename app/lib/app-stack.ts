import * as cdk from 'aws-cdk-lib';
import {Construct} from 'constructs';

import {CommonResources} from './common-resources';
import {FileUpload} from './file-upload';
import {NagSuppressions} from "cdk-nag";

export class AppStack extends cdk.Stack {
    constructor(scope: Construct, id: string, props?: cdk.StackProps) {
        super(scope, id, props);

        // Create the resources used at lage by this application
        const common = new CommonResources(this, "Common Resources");
        const encryptionKey = common.encryptionKey;
        const accessLogsBucket = common.accessLogsS3Bucket;

        // Launch the main stack creating the resources
        const fileUpload = new FileUpload(this, "File Upload", {
            encryptionKey: encryptionKey,
            accessLogsBucket: accessLogsBucket,
        });

        // Adding event source for S3 to invoke a Lambda function creates a BucketNotificationsHandler Lambda function
        // that applies the configuration to S3. This function has permissive policy automatically generated by CDK
        // and it is not possible to access it directly to suppress the cdk-nag errors
        NagSuppressions.addStackSuppressions(this, [
                {
                    id: "AwsSolutions-IAM4",
                    reason: "Can't suppress BucketNotificationsHandler inside the construct",
                    appliesTo: ["Policy::arn:<AWS::Partition>:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]
                },
                {
                    id: "AwsSolutions-IAM5",
                    reason: "Can't suppress BucketNotificationsHandler inside the construct and can't narrow down here",
                },
            ],
            true
        );
    }
}
